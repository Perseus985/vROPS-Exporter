.get-token-curl:
  before_script:
    - echo PrÃ¼fe ob die notwendigen Variablen gesetzt sind
    - if [ -z ${TF_VAR_vra_url+x} ]; then echo "vra_url variable does not exist" && exit 1; fi
    - if [ -z ${vra_username+x} ]; then echo "vra_username variable does not exist" && exit 1; fi
    - if [ -z ${vra_password+x} ]; then echo "vra_password variable does not exist" && exit 1; fi
  script:
    - |
      requestUrl=${TF_VAR_vra_url}/csp/gateway/am/api/login?access_token
      echo "vRA URL = $requestUrl"
      vraBody='{"username":"'"$vra_username"'","password":"'"$vra_password"'"}'
      response=$(curl -k -X POST "$requestUrl" -H "Accept: application/json" -H "Content-Type: application/json" -s -d "$vraBody")
      status=$(echo "$response" | jq -r '.status // empty')
      error_description=$(echo "$response" | jq -r '.error_description // empty')
      if [ "$status" != "" ]; then
        echo -e "\e[31mFailed to retrieve vRA Refresh Token for $TF_VAR_vra_url!\e[0m"
        echo -e "\e[31mStatus: $status\e[0m"
        echo -e "\e[31mError Description: $error_description\e[0m"
        exit 1
      else
        VRA_REFRESH_TOKEN=$(echo "$response" | jq -r '.refresh_token')
        echo "Successfully got vRA Refresh Token for $TF_VAR_vra_url!"
        echo "TF_VAR_refresh_token=$VRA_REFRESH_TOKEN" >> vratoken.env
      fi

  artifacts:
    reports:
      dotenv: vratoken.env
    when: on_success
  rules:
    - when: always
